version: '3.8'
services:
  postgres:
    image: postgres:17
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql -U ${DB_USER} -tc "SELECT 1 FROM pg_database WHERE datname = '${DB_NAME}'" | grep -q 1 || psql -U ${DB_USER} -c "CREATE DATABASE ${DB_NAME};"
        exec postgres

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    deploy:
      replicas: 1

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    deploy:
      replicas: 1

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ~/apps/redis:/data
    command: redis-server --appendonly yes --requirepass ${DB_PASSWORD}
    deploy:
      replicas: 1

  microservice-appointment:
    build:
      context: ./petcare-appointment
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${DB_NAME}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
    deploy:
      replicas: 1
